n = 5
T0 = 0.91
Ti = 5.5
K = 1.08
T1 = 0

// создание полинома, оператор Лапласа для передаточной функции
s = poly(0, 's')

// вычисление передаточной функции
Wright = 1 / (1 + s * T0)^n
Wleft = K * (1 + (1 / (Ti * s))) * Wright
W = Wleft / (1 + Wleft)
//disp('Wleft = ', Wleft)
//disp('W = ', W)

// Создание линейной системы на основе передаточной функции
// 'c' - передатчная ф-ия задана в форме коэф-ов полиномов (числитель и знаменатель)
sys_lin = syslin('c', W)
// Извлечение матриц состояний и матрицы передачи D из линейной системы
[A, B, C, D] = abcd(sys_lin) //returns the A,B,C,D matrices from a linear system 
disp('A = ', A)
disp('B = ', B)
disp('C = ', C)
disp('D = ', D)

// Получение спектра матрицы А (собственных значений)
mat_A_spec = spec(A)
disp('Спектр матрицы A', mat_A_spec)

// Решение уравнения Ляпунова, А - матрица системы
// AX + XA^T = C, C = -eye(A) - отрицательная единичная матрица размером как А
// 'c' - непрерывная система
// H содержит решение (Х)
H = lyap(A, -eye(A), 'c')
disp('H = ', H)

// Нахждение собственных векторов H 
mat_H_spec = spec(H)
disp('Спектр матрицы Н', mat_H_spec)

// Проверка условия устойчивости
if (mat_H_spec > 0) then
    disp('H положительно определена. По Th Ляпунова система устойчива асимптотически')
    // показатель устойчивости
    kappa = norm(H, 2)     
else
    kappa = %inf
end
disp('kappa(A) = ', kappa)
